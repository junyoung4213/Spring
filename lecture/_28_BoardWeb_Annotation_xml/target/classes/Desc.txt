[의존성 주입(DI)와 관련된 애노테이션]
1. Spring Framework  제공
	@Autowired 
		; 변수 위에 설정하면 해당 타입 객체 찾아서 자동 할당
	@Qualifier
		; 특정 객체의 이름을 찾아서 할당

2. Java에서 제공
	@Inject
		; @Autowired와 동일한 기능을 제공
	@Resource	
		; @Autowired와 @Qualifier의 기능을 결합
		
[Annotation과 XML 설정 병행하기]
1) XML방식 : 자바 소스를 수정하지 않고 XML파일의 설정만 변경.
		       유지보수가 편하다
2) Annotation방식 : 설정이 편리하다
				     소스를 보면 의존관계가 바로 보인다

3) 2개의 장점을 결합
	변경되지 않는 객체는 Annotation 사용
	변경이 되는 객체는 XML을 사용 
	외부 라이브러리에서 제공되는 클래스 객체는 XML을 사용한다.
	
[추가 어노테이션]
1) @Component : bean을 생성하는 가장 기본적인 어노테이션

- @Component를 상속받은 어노테이션
2) @Service	  : 특별 추가 기능은 없지만
				나중에 Service라는 부분에 추가될 수도 있기 때문에
				파생시킨것이다.
				(Service 역할의 클래스에 추가)
3) @Repository : DB연동과정에서 발생하는 예외를 변환해주는 
				  특정 기능이 추가되어 있음.
				 (Dao 역할의 클래스에 추가)
4) @Controller : MVC 아키텍처에서 Controller객체로 인식시켜주는 역할
				(Controller 역할의 클래스에 추가)