AOP(Aspect Oriented Programming)
: 관심(관점) 지향 프로그래밍
; 관심도 있는 것끼리 별도로 분리한다
; 외부 설정에 의해서 자유롭게 추가삭제

1) 조인포인트(JoinPoint)
 우리의 관심의 대상 메서드들(비즈니스 로직 메서드)
 
2) 포인트컷(PointCut) 
 필터링된 조인포인트(이 메서드에 로그를 삽입하겠다)
 
 <aop:pointcut id="allPointcut" expression="execution(* com.springstudy.biz..*ServiceImpl.*(..))"/>
 
3) 포인트컷 표현식
리턴타입 : * 
패키지경로 : com.springstudy.biz..
클래스명 : *ServiceImpl
클래스명과 메서드를 구분 : .
메서드명 : *
매개변수 : (..))

4) 어드바이스(Advice)
 : 횡단 관심에 해당하는 공통 기능의 코드를 의미
   ex) 로그 메서드(printLogging)
  <bean id="log" class="com.springstudy.biz.common.log.Log4jAdvice"></bean>
  <aop:aspect ref="log">
			<aop:before method="printLogging"
						pointcut-ref="getPointCut" />
  </aop:aspect>
  
5) 어드바이스의 동작시점
 ; before
   after
   after-returning
   after-throwing
   around
   
 6) 애스팩트(Aspect)
   어드바이저(Advisor) : 트랜잭션시
   
   Aspect = PointCut + Advice
   어떤 대상 메서드(PointCut)에 어떤 공통기능(횡단관심)을
   어느 시점에 추가할 것이냐
   
 7) 위빙(Weaving)
   advice가 pointcut에 삽입되는 시점
   a. 컴파일 타임
   b. 로딩타임
   c. 런 타임 - Spring Only
   
 8) 표현식 상세
   8-1) 리턴타입
  	*		: 모든 리턴타입
  	void	: void 리턴타입
  	!void	: void가 아닌 리턴타입
  	
   8-2) 패키지 지정
   com.springstudy.biz  		: com.springstudy.biz 만 지정
   com.springstudy.biz.. 		: com.springstudy.biz패키지로 시작하는 모든 패키지
   com.springstudy.biz..impl	: com.springstudy.biz패키지로 시작하면서 마지막 패키지 이름이 impl로 끝나는 패키지 
   
   8-3) 클래스 지정
   BoardServiceImpl 	: BoardServiceImpl만 지정
   *Impl				: 클래스 이름이 Impl로 끝나는 클래스
   BoardService+ 		: 부모가 BoardService인 모든 자식 클래스
   
   8-4) 메서드 지정
   *(..)	: 모든 메서드
   get*(..)	: 메서드 이름이 get으로 시작하는 모든 메서드
   
   8-5) 매개변수 지정
   (..)		: 모든 타입, 모든 매개변수 개수 (제약없음)
   (*)		: 반드시 1개의 매개변수를 가진 메서드
   (com.springstudy.user.UserVO) :
   			매개변수로 UserVO를 가지는 메서드만 선택
   			패키지 경로도 써줘야 한다.
   (!com.springstudy.user.UserVO):
   			매개변수로 UserVO를 가지지 않는 메서드만 선택
   (Integer, ..) : 한개 이상의 매개변수를 가지되,
   			첫번째 매개변수의 타입은 Integer인 메서드만 선택
   (Integer, *)  : 반드시 두 개의 매개변수를 가지되,
   			첫번째 매개변수의 타입이 Integer인 메서드만 선택