<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- 아래 모든 설정을 Annotation으로 변경한다. -->
	<context:component-scan base-package="com.springstudy.view">
	</context:component-scan>
	
	<!-- jackson라이브러리에 포함된 HttpMessageConvert가 등록된다 -->
	<mvc:annotation-driven></mvc:annotation-driven>

	<!-- HandlerMapping 등록 -->
	
	<!-- Controller 등록 -->
	
	<!-- ViewResolver 등록 -->
	
	<!-- 파일 업로드 설정 -->
	<!-- 아래에 생성되는 bean객체는 반드시 id를 multipartResolver로
		명명해야 한다.
		maxUploadSize를 설정하지 않으면 value=-1이고
		이 의미는 파일 크기 무제한
	 -->
	<!-- 스프링 컨테이너가 Command객체인 BoardVO객체의 
	MultipartFile객체를 자동으로 생성하는데 생성할 때
	아래에 있는 bean을 참조해서 생성하게 되므로
	이것을 반드시 써줘야 한다 -->
	<bean id="multipartResolver"
		  class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="-1"/>
	</bean>
	
	<!-- 예외 처리 설정 -->
	<bean id="exceptionResolver"
		  class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.ArithmeticException">
					common/arithmeticError.jsp
				</prop>
				<prop key="java.lang.NullPointerException">
					common/nullPointerError.jsp
				</prop>
			</props>
		</property>
		<property name="defaultErrorView" 
				  value="common/error.jsp">
		</property>
	</bean>
	
	<!-- 다국어 설정 -->
	<!-- MessageSource 등록 -->
	<!-- message폴더내의 messageSource로 시작하는 프로퍼티 파일 -->
	<bean id="messageSource"
		  class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>message.messageSource</value>
			</list>
		</property>
	</bean>
	
	<!-- LocaleResolver 등록 -->
	<!-- en이냐 ko냐 아니면 다른 언어냐 파일명에 자동 적용 -->
	<!-- 
		1) AcceptHeaderLocaleResolver
		  ; HTTP request 헤더에서 Accept-Language에 설정된
		    Locale로 적용
		  ; 따로 설정하기 않으면 이것이 기본 설정
		2) CookieLocaleResolver
		  ; Cookie에 저장된 Locale 정보를 추출하여 적용
		3) SessionLocaleResolver
		  ; HttpSession에 저장된 Locale정보를 추출하여 적용
		4) FixedLocaleResolver
		  ; 특정 Locale로 고정하여 적용
	 -->
	 <!-- 무조건 이 id="localeResolver" 이름이어야 한다 -->
	<bean id="localeResolver"
		  class="org.springframework.web.servlet.i18n.SessionLocaleResolver"/>
	
	<!-- LocaleChangeInterceptor 등록 -->
	<!-- 언어 표현을 우리 마음대로 선택하고 싶을 때 -->
	<!-- 클라이언트로부터 lang이라는 매개변수로 특정 Locale이
	     전송되면 해당 Locale로 변경하겠다 -->
	<mvc:interceptors>
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<property name="paramName" value="lang"/>
		</bean>
	</mvc:interceptors>
</beans>





















